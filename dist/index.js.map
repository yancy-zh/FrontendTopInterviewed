{"version":3,"sources":["app.js","index.js"],"names":["http","require","fs","path","mimeTypes","app","createServer","request","response","filePath","join","__dirname","url","extname","String","toLowerCase","contentType","readFile","error","content","writeHead","end","code","arr","outArr","fn","i","length","element","Array","isArray","push","module","exports","port","listen","console","log"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["const http = require(\"http\");\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst mimeTypes = {\r\n  \".html\": \"text/html\",\r\n  \".js\": \"text/javascript\",\r\n  \".css\": \"text/css\",\r\n  \".json\": \"application/json\",\r\n  \".png\": \"image/png\",\r\n  \".jpg\": \"image/jpg\",\r\n  \".gif\": \"image/gif\",\r\n  \".wav\": \"audio/wav\",\r\n  \".mp4\": \"video/mp4\",\r\n  \".woff\": \"application/font-woff\",\r\n  \".ttf\": \"application/font-ttf\",\r\n  \".eot\": \"application/vnd.ms-fontobject\",\r\n  \".otf\": \"application/font-otf\",\r\n  \".svg\": \"application/image/svg+xml\",\r\n};\r\n\r\nconst app = http.createServer((request, response) => {\r\n  let filePath = path.join(__dirname, \"public\", request.url);\r\n  if (filePath === path.join(__dirname, \"public\", \"/\"))\r\n    filePath = path.join(__dirname, \"public\", \"index.html\");\r\n\r\n  const extname = String(path.extname(filePath)).toLowerCase();\r\n  const contentType = mimeTypes[extname] || \"application/octet-stream\";\r\n\r\n  fs.readFile(filePath, (error, content) => {\r\n    if (error) {\r\n      response.writeHead(500);\r\n      response.end(\r\n        `Sorry, check with the site admin for error: ${error.code} ..\\n`\r\n      );\r\n      response.end();\r\n    } else {\r\n      response.writeHead(200, { \"Content-Type\": contentType });\r\n      response.end(content, \"utf-8\");\r\n    }\r\n  });\r\n});\r\n// my code\r\n// flat()\r\nconst arr = [1, [2, [3, [4, 5]]], 6];\r\n// console.log(arr.flat(Infinity));\r\n// method 1: using recursion\r\nconst outArr = [];\r\nconst fn = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const element = arr[i];\r\n    if (Array.isArray(element)) {\r\n      fn(element);\r\n    } else {\r\n      outArr.push(element);\r\n    }\r\n  }\r\n};\r\nfn(arr);\r\n// console.log(\"Recursion: \" + outArr);\r\n\r\nmodule.exports = app;\r\n","const app = require('./app');\r\n\r\nconst port = '8888';\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is listening on port ${port}...`);\r\n});"]}